// Generated by CoffeeScript 1.9.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  (function($, window) {
    var ElGrandMenu, Elmenu;
    Elmenu = (function() {
      Elmenu.prototype.defaults = {
        ns: 'elmenu',
        classes: {
          wrapper: 'wrapper',
          list: 'list dropdown-menu',
          listItem: 'li',
          link: 'link',
          open: 'open',
          closed: 'closed',
          bottom: 'bottom'
        },
        items: [
          {
            name: 'El Pusto!',
            link: 'http://goo.gl/OmdSQD'
          }
        ]
      };

      function Elmenu($el, options) {
        this.$el = $el;
        this.options = $.extend(true, this.defaults, options);
        this.render();
        this.bindEvents();
      }

      Elmenu.prototype.render = function() {
        var $wrapper, i, item, j, len, o, ref, self;
        self = this;
        o = this.options;
        $wrapper = $('<div/>').addClass(this.ns(o.classes.wrapper));
        this.$wrapper = this.$el.wrap($wrapper).parent();
        this.$list = $('<ul/>').addClass(this.ns(o.classes.list));
        ref = o.items;
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          item = ref[i];
          self.$list.append($('<li/>').addClass(this.ns(o.classes.listItem)).append($('<a/>').addClass(this.ns(o.classes.link)).attr({
            target: '_blank',
            href: item.link
          }).text(item.name)));
        }
        return this.$el.after(this.$list);
      };

      Elmenu.prototype.ns = function(str) {
        return [this.options.ns, str].join('-');
      };

      Elmenu.prototype.showMenuItems = function() {
        return this.$wrapper.addClass('open');
      };

      Elmenu.prototype.hideMenuItems = function() {
        return this.$wrapper.removeClass('open');
      };

      Elmenu.prototype.bindEvents = function() {
        var self;
        self = this;
        return self.$el.on('click', function() {
          if (self.$wrapper.hasClass('open')) {
            return self.hideMenuItems();
          } else {
            return self.showMenuItems();
          }
        });
      };

      return Elmenu;

    })();
    createJQPlugin(Elmenu, "elmenu");
    ElGrandMenu = (function(superClass) {
      extend(ElGrandMenu, superClass);

      function ElGrandMenu($el, options) {
        options = $.extend(true, this.defaults, {
          ns: 'elgrandmenu',
          items: [
            {
              name: 'El Sovsem Pusto!',
              link: 'http://goo.gl/AYQcS4'
            }
          ]
        }, options);
        ElGrandMenu.__super__.constructor.call(this, $el, options);
      }

      ElGrandMenu.prototype.showMenuItems = function() {
        ElGrandMenu.__super__.showMenuItems.apply(this, arguments);
        return this.$el.trigger('myMenuOpened');
      };

      ElGrandMenu.prototype.hideMenuItems = function() {
        ElGrandMenu.__super__.hideMenuItems.apply(this, arguments);
        return this.$el.trigger('myMenuClosed');
      };

      ElGrandMenu.prototype.myMenuOpened = function() {
        return console.log('+ menu opened :)');
      };

      ElGrandMenu.prototype.myMenuClosed = function() {
        return console.log('- menu closed :(');
      };

      ElGrandMenu.prototype.rerender = function(items) {
        return this.render();
      };

      ElGrandMenu.prototype.bindEvents = function() {
        ElGrandMenu.__super__.bindEvents.apply(this, arguments);
        this.$el.on('myMenuOpened', this.myMenuOpened);
        return this.$el.on('myMenuClosed', this.myMenuClosed);
      };

      return ElGrandMenu;

    })(Elmenu);
    return createJQPlugin(ElGrandMenu, "elgrandmenu");
  })(jQuery, window);

}).call(this);

//# sourceMappingURL=jquery.elmenu.js.map
