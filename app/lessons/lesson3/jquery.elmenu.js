// Generated by CoffeeScript 1.9.2
(function() {
  (function($, window) {
    var Elmenu;
    Elmenu = (function() {
      function Elmenu($el, options) {
        this.$el = $el;
        this.options = $.extend(true, {
          ns: 'elmenu',
          classes: {
            wrapper: 'wrapper',
            list: 'list dropdown-menu',
            listItem: 'li',
            link: 'link',
            open: 'open',
            closed: 'closed',
            bottom: 'bottom'
          },
          items: [
            {
              name: 'El Pusto!',
              link: 'http://goo.gl/OmdSQD'
            }
          ]
        }, options);
        this.render();
        this.bindEvents();
      }

      Elmenu.prototype.render = function() {
        var $wrapper, i, item, j, len, o, ref, self;
        self = this;
        o = this.options;
        $wrapper = $('<div/>').addClass(this.ns(o.classes.wrapper));
        this.$wrapper = this.$el.wrap($wrapper).parent();
        this.$list = $('<ul/>').addClass(this.ns(o.classes.list));
        ref = o.items;
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          item = ref[i];
          self.$list.append($('<li/>').addClass(this.ns(o.classes.listItem)).append($('<a/>').addClass(this.ns(o.classes.link)).attr({
            target: '_blank',
            href: item.link
          }).text(item.name)));
        }
        return this.$el.after(this.$list);
      };

      Elmenu.prototype.ns = function(str) {
        return [this.options.ns, str].join('-');
      };

      Elmenu.prototype.showMenuItems = function() {
        return this.$wrapper.addClass('open');
      };

      Elmenu.prototype.hideMenuItems = function() {
        return this.$wrapper.removeClass('open');
      };

      Elmenu.prototype.bindEvents = function() {
        var self;
        self = this;
        return self.$el.on('click', function() {
          if (self.$wrapper.hasClass('open')) {
            return self.hideMenuItems();
          } else {
            return self.showMenuItems();
          }
        });
      };

      return Elmenu;

    })();
    return createJQPlugin(Elmenu, "elmenu");
  })(jQuery, window);

}).call(this);

//# sourceMappingURL=jquery.elmenu.js.map
